// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file dwn/v1/tx.proto (package dwn.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./genesis_pb.js";

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message dwn.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address of the governance account.
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params defines the parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: dwn.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "dwn.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message dwn.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "dwn.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * MsgSpawn spawns a New Vault with Unclaimed State. This is a one-time
 * operation that must be performed interacting with the Vault.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message dwn.v1.MsgUpdateVault
 */
export class MsgUpdateVault extends Message<MsgUpdateVault> {
  /**
   * authority is the address of the governance account.
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params defines the parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: dwn.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateVault>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "dwn.v1.MsgUpdateVault";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateVault {
    return new MsgUpdateVault().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateVault {
    return new MsgUpdateVault().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateVault {
    return new MsgUpdateVault().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateVault | PlainMessage<MsgUpdateVault> | undefined, b: MsgUpdateVault | PlainMessage<MsgUpdateVault> | undefined): boolean {
    return proto3.util.equals(MsgUpdateVault, a, b);
  }
}

/**
 * MsgSpawnResponse defines the response structure for executing a
 * MsgSpawn message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message dwn.v1.MsgUpdateVaultResponse
 */
export class MsgUpdateVaultResponse extends Message<MsgUpdateVaultResponse> {
  constructor(data?: PartialMessage<MsgUpdateVaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "dwn.v1.MsgUpdateVaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateVaultResponse {
    return new MsgUpdateVaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateVaultResponse {
    return new MsgUpdateVaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateVaultResponse {
    return new MsgUpdateVaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateVaultResponse | PlainMessage<MsgUpdateVaultResponse> | undefined, b: MsgUpdateVaultResponse | PlainMessage<MsgUpdateVaultResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateVaultResponse, a, b);
  }
}

/**
 * MsgEjectVault ejects a vault from the system. This is a one-time
 * operation that must be performed interacting with the Vault.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message dwn.v1.MsgEjectVault
 */
export class MsgEjectVault extends Message<MsgEjectVault> {
  /**
   * authority is the address of the governance account.
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params defines the parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: dwn.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgEjectVault>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "dwn.v1.MsgEjectVault";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgEjectVault {
    return new MsgEjectVault().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgEjectVault {
    return new MsgEjectVault().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgEjectVault {
    return new MsgEjectVault().fromJsonString(jsonString, options);
  }

  static equals(a: MsgEjectVault | PlainMessage<MsgEjectVault> | undefined, b: MsgEjectVault | PlainMessage<MsgEjectVault> | undefined): boolean {
    return proto3.util.equals(MsgEjectVault, a, b);
  }
}

/**
 * MsgEjectVaultResponse defines the response structure for executing a
 * MsgEjectVault message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message dwn.v1.MsgEjectVaultResponse
 */
export class MsgEjectVaultResponse extends Message<MsgEjectVaultResponse> {
  constructor(data?: PartialMessage<MsgEjectVaultResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "dwn.v1.MsgEjectVaultResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgEjectVaultResponse {
    return new MsgEjectVaultResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgEjectVaultResponse {
    return new MsgEjectVaultResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgEjectVaultResponse {
    return new MsgEjectVaultResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgEjectVaultResponse | PlainMessage<MsgEjectVaultResponse> | undefined, b: MsgEjectVaultResponse | PlainMessage<MsgEjectVaultResponse> | undefined): boolean {
    return proto3.util.equals(MsgEjectVaultResponse, a, b);
  }
}

